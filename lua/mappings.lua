local keymap = vim.keymap

-- Norman Keyboard Layout
keymap.set('n', 'd', 'e')
keymap.set('n', 'f', 'r')
keymap.set('n', 'k', 't')

keymap.set('n', 'j', 'y')
keymap.set('n', 'r', 'i')
keymap.set('n', 'l', 'o')
keymap.set('n', 'e', 'd')
keymap.set('n', 't', 'f')
keymap.set('n', 'y', 'h')
keymap.set('n', 'n', 'j')
keymap.set('n', 'i', 'k')
keymap.set('n', 'o', 'l')
keymap.set('n', 'p', 'n')
keymap.set('n', 'h', 'p')
keymap.set('n', 'D', 'E')
keymap.set('n', 'F', 'R')
keymap.set('n', 'K', 'T')
keymap.set('n', 'J', 'Y')
keymap.set('n', 'R', 'I')
keymap.set('n', 'L', 'O')
keymap.set('n', 'E', 'D')
keymap.set('n', 'T', 'F')
keymap.set('n', 'Y', 'H')
keymap.set('n', 'N', 'J')
keymap.set('n', 'I', 'K')
keymap.set('n', 'O', 'L')
keymap.set('n', 'P', 'N')
keymap.set('n', 'H', 'P')

keymap.set('o', 'd', 'e')
keymap.set('o', 'f', 'r')
keymap.set('o', 'k', 't')
keymap.set('o', 'j', 'y')
keymap.set('o', 'r', 'i')
keymap.set('o', 'l', 'o')
keymap.set('o', 'e', 'd')
keymap.set('o', 't', 'f')
keymap.set('o', 'y', 'h')
keymap.set('o', 'n', 'j')
keymap.set('o', 'i', 'k')
keymap.set('o', 'o', 'l')
keymap.set('o', 'p', 'n')
keymap.set('o', 'h', 'p')
keymap.set('o', 'D', 'E')
keymap.set('o', 'F', 'R')
keymap.set('o', 'K', 'T')
keymap.set('o', 'J', 'Y')
keymap.set('o', 'R', 'I')
keymap.set('o', 'L', 'O')
keymap.set('o', 'E', 'D')
keymap.set('o', 'T', 'F')
keymap.set('o', 'Y', 'H')
keymap.set('o', 'N', 'J')
keymap.set('o', 'I', 'K')
keymap.set('o', 'O', 'L')
keymap.set('o', 'P', 'N')
keymap.set('o', 'H', 'P')

keymap.set('x', 'd', 'e')
keymap.set('x', 'f', 'r')
keymap.set('x', 'k', 't')
keymap.set('x', 'j', 'y')
keymap.set('x', 'r', 'i')
keymap.set('x', 'l', 'o')
keymap.set('x', 'e', 'd')
keymap.set('x', 't', 'f')
keymap.set('x', 'y', 'h')
keymap.set('x', 'n', 'j')
keymap.set('x', 'i', 'k')
keymap.set('x', 'o', 'l')
keymap.set('x', 'p', 'n')
keymap.set('x', 'h', 'p')
keymap.set('x', 'D', 'E')
keymap.set('x', 'F', 'R')
keymap.set('x', 'K', 'T')
keymap.set('x', 'J', 'Y')
keymap.set('x', 'R', 'I')
keymap.set('x', 'L', 'O')
keymap.set('x', 'E', 'D')
keymap.set('x', 'T', 'F')
keymap.set('x', 'Y', 'H')
keymap.set('x', 'N', 'J')
keymap.set('x', 'I', 'K')
keymap.set('x', 'O', 'L')
keymap.set('x', 'P', 'N')
keymap.set('x', 'H', 'P')

-- insert
keymap.set('i', '<C-a>', '<Esc>^i')
keymap.set('i', '<C-e>', '<Esc>$a')

keymap.set('i', '<C-d>', [[<Cmd>lua require'luasnip'.jump(1)<CR>]])
keymap.set('s', '<C-d>', [[<Cmd>lua require'luasnip'.jump(1)<CR>]])
keymap.set('i', '<C-u>', [[<Cmd>lua require'luasnip'.jump(-1)<CR>]])
keymap.set('s', '<C-u>', [[<Cmd>lua require'luasnip'.jump(-1)<CR>]])

-- normal
keymap.set('n', ']z', 'zj')
keymap.set('n', '[z', 'zk')

keymap.set('n', 'ee', _G.smart_dd, { noremap = true, expr = true })

-- visual
keymap.set('v', '<', '<gv')
keymap.set('v', '>', '>gv')

-- Plugin
keymap.set('n', '<Tab>', ':BufferLineCycleNext<CR>')
keymap.set('n', '<S-Tab>', ':BufferLineCyclePrev<CR>')

keymap.set('x', 'ga', '<Plug>(EasyAlign)')
keymap.set('n', 'ga', '<Plug>(EasyAlign)')

keymap.set('n', '<A-n>', ':MoveLine(1)<CR>')
keymap.set('n', '<A-i>', ':MoveLine(-1)<CR>')
keymap.set('v', '<A-n>', ':MoveBlock(1)<CR>')
keymap.set('v', '<A-i>', ':MoveBlock(-1)<CR>')
keymap.set('n', '<A-o>', ':MoveHChar(1)<CR>')
keymap.set('n', '<A-y>', ':MoveHChar(-1)<CR>')
keymap.set('v', '<A-o>', ':MoveHBlock(1)<CR>')
keymap.set('v', '<A-y>', ':MoveHBlock(-1)<CR>')

keymap.set('n', 'gd', ':Telescope lsp_definitions<CR>')
keymap.set('n', 'gr', ':Telescope lsp_references<CR>')
keymap.set('n', 'gi', ':Telescope lsp_implementations<CR>')
keymap.set('n', 'gh', ':Telescope registers<CR>')

keymap.set('n', 'w', '<Plug>WordMotion_w')
keymap.set('n', 'W', '<Plug>WordMotion_W')
keymap.set('n', 'b', '<Plug>WordMotion_b')
keymap.set('n', 'B', '<Plug>WordMotion_B')
keymap.set('n', 'd', '<Plug>WordMotion_e')
keymap.set('n', 'D', '<Plug>WordMotion_d')

keymap.set('n', ']d', '<Cmd>lua vim.diagnostic.goto_next()<CR>')
keymap.set('n', '[d', '<Cmd>lua vim.diagnostic.goto_prev()<CR>')

keymap.set('n', 'gw', ':HopWord<CR>')
keymap.set('n', 'gl', ':HopLine<CR>')
keymap.set('n', 'gs', ':HopChar2<CR>')
keymap.set('v', 'gw', ':HopWord<CR>')
keymap.set('v', 'gl', ':HopLine<CR>')
keymap.set('v', 'gs', ':HopChar2<CR>')

-- Leader
keymap.set('n', '<leader>g', ':Neogit<CR>')
keymap.set('n', '<leader><space>', ':BufferLinePick<CR>')

keymap.set('n', '<leader>qa', ':qa!<CR>')
keymap.set('n', '<leader>qq', ':lua MiniBufremove.delete()<CR>')
keymap.set('n', '<leader>qc', ':w|%bd!|e#|bd#<CR>')

keymap.set('n', '<leader>wc', '<C-w>o')
keymap.set('n', '<leader>wq', '<C-w>c')
keymap.set('n', '<leader>wh', '<C-w>s')
keymap.set('n', '<leader>wv', '<C-w>v')
keymap.set('n', '<leader>wy', '<C-w>h')
keymap.set('n', '<leader>wn', '<C-w>j')
keymap.set('n', '<leader>wi', '<C-w>k')
keymap.set('n', '<leader>wo', '<C-w>l')
keymap.set('n', '<leader>wY', '<C-w>H')
keymap.set('n', '<leader>wN', '<C-w>J')
keymap.set('n', '<leader>wI', '<C-w>K')
keymap.set('n', '<leader>wO', '<C-w>L')

keymap.set('n', '<leader>w+', '<C-w>+')
keymap.set('n', '<leader>w-', '<C-w>-')
keymap.set('n', '<leader>w=', '<C-w>=')

keymap.set('n', '<leader>rn', '<Cmd>lua vim.lsp.buf.rename()<CR>')

keymap.set('n', '<leader>ff', ':Telescope find_files<CR>')
keymap.set('n', '<leader>fh', ':Telescope oldfiles<CR>')
keymap.set('n', '<leader>fe', ':Telescope everything<CR>')
keymap.set('n', '<leader>fg', ':Telescope live_grep<CR>')
keymap.set('n', '<leader>bb', ':Telescope buffers<CR>')
keymap.set('n', '<leader>ft', ':TodoTelescope<CR>')
keymap.set('n', '<leader>fp', ':Telescope projects<CR>')
keymap.set('n', '<leader>fm', ':Format<CR>')

keymap.set('n', '<leader>ss', ':lua MiniSessions.write()<CR>')
keymap.set('n', '<leader>so', ':lua MiniStarter.open()<CR>')

keymap.set('n', '<leader>td', ':Neorg journal today<CR>')
keymap.set('n', '<leader>tm', ':Neorg journal tomorrow<CR>')
keymap.set('n', '<leader>ty', ':Neorg journal yesterday<CR>')
keymap.set('n', '<leader>tv', ':Neorg gtd views<CR>')
keymap.set('n', '<leader>tc', ':Neorg gtd capture<CR>')
keymap.set('n', '<leader>tw', ':Neorg workspace gtd<CR>')

keymap.set('n', '<F1>', ':FloatermToggle<CR>')
keymap.set('t', '<F1>', '<C-\\><C-n>:FloatermToggle<CR>')
keymap.set('t', '<Esc>', '<C-\\><C-n>')
keymap.set('t', '<C-t>', '<C-\\><C-n>:FloatermNew<CR>')
keymap.set('t', '<C-n>', '<C-\\><C-n>:FloatermNext<CR>')
keymap.set('t', '<C-p>', '<C-\\><C-n>:FloatermPrev<CR>')

keymap.set('n', '<F2>', ':NvimTreeToggle<CR>')
keymap.set('n', '<F3>', ':Neorg kanban toggle<CR>')

keymap.set('n', '<F5>', [[:lua require'dap'.continue()<CR>]])
keymap.set('n', '<F6>', [[:lua require'dap'.close()<CR>]])
keymap.set('n', '<F7>', [[:lua require'dapui'.toggle()<CR>]])
keymap.set('n', '<F8>', [[:lua require'dap'.toggle_breakpoint()<CR>]])
keymap.set('n', '<F9>', [[:lua require'dap'.step_over()<CR>]])
keymap.set('n', '<F10>', [[:lua require'dap'.step_into()<CR>]])
keymap.set('n', '<F11>', [[:lua require'dap'.step_out()<CR>]])
keymap.set('n', '<F12>', [[:lua require'dap'.run_to_cursor()<CR>]])

vim.api.nvim_create_autocmd('filetype', {
    pattern = 'netrw',
    callback = function()
        local bind = function(lhs, rhs)
            vim.keymap.set('n', lhs, rhs, { buffer = true })
        end

        bind('n', 'j')
        bind('i', 'k')
        bind('y', 'h')
        bind('o', 'l')
    end,
})
