local function map(mode, lhs, rhs, opts)
    local options = {noremap = true, silent = true}
    if opts then options = vim.tbl_extend('force', options, opts) end
    vim.api.nvim_set_keymap(mode, lhs, rhs, options)
end

-- Norman Keyboard Layout
map('n', 'd', 'e')
map('n', 'f', 'r')
map('n', 'k', 't')
map('n', 'j', 'y')
map('n', 'r', 'i')
map('n', 'l', 'o')
map('n', 'e', 'd')
map('n', 't', 'f')
map('n', 'y', 'h')
map('n', 'n', 'j')
map('n', 'i', 'k')
map('n', 'o', 'l')
map('n', 'p', 'n')
map('n', 'h', 'p')
map('n', 'D', 'E')
map('n', 'F', 'R')
map('n', 'K', 'T')
map('n', 'J', 'Y')
map('n', 'R', 'I')
map('n', 'L', 'O')
map('n', 'E', 'D')
map('n', 'T', 'F')
map('n', 'Y', 'H')
map('n', 'N', 'J')
map('n', 'I', 'K')
map('n', 'O', 'L')
map('n', 'P', 'N')
map('n', 'H', 'P')

map('o', 'd', 'e')
map('o', 'f', 'r')
map('o', 'k', 't')
map('o', 'j', 'y')
map('o', 'r', 'i')
map('o', 'l', 'o')
map('o', 'e', 'd')
map('o', 't', 'f')
map('o', 'y', 'h')
map('o', 'n', 'j')
map('o', 'i', 'k')
map('o', 'o', 'l')
map('o', 'p', 'n')
map('o', 'h', 'p')
map('o', 'D', 'E')
map('o', 'F', 'R')
map('o', 'K', 'T')
map('o', 'J', 'Y')
map('o', 'R', 'I')
map('o', 'L', 'O')
map('o', 'E', 'D')
map('o', 'T', 'F')
map('o', 'Y', 'H')
map('o', 'N', 'J')
map('o', 'I', 'K')
map('o', 'O', 'L')
map('o', 'P', 'N')
map('o', 'H', 'P')

map('x', 'd', 'e')
map('x', 'f', 'r')
map('x', 'k', 't')
map('x', 'j', 'y')
map('x', 'r', 'i')
map('x', 'l', 'o')
map('x', 'e', 'd')
map('x', 't', 'f')
map('x', 'y', 'h')
map('x', 'n', 'j')
map('x', 'i', 'k')
map('x', 'o', 'l')
map('x', 'p', 'n')
map('x', 'h', 'p')
map('x', 'D', 'E')
map('x', 'F', 'R')
map('x', 'K', 'T')
map('x', 'J', 'Y')
map('x', 'R', 'I')
map('x', 'L', 'O')
map('x', 'E', 'D')
map('x', 'T', 'F')
map('x', 'Y', 'H')
map('x', 'N', 'J')
map('x', 'I', 'K')
map('x', 'O', 'L')
map('x', 'P', 'N')
map('x', 'H', 'P')

-- insert
map('i', '<C-a>', '<Esc>^i')
map('i', '<C-e>', '<Esc>$a')

-- normal
map('n', ']z', 'zj')
map('n', '[z', 'zk')

-- visual
map('v', '<', '<gv')
map('v', '>', '>gv')

-- terminal
map('t', '<C-o>', '<C-\\><C-n>')
map('t', '<C-t>', [[<C-\><C-n>:FloatermNew<CR>]])
map('t', '<C-n>', [[<C-\><C-n>:FloatermNext<CR>]])
map('t', '<C-p>', [[<C-\><C-n>:FloatermPrev<CR>]])

-- Plugin
map('n', '<TAB>', ':BufferLineCycleNext<CR>')
map('n', '<S-TAB>', ':BufferLineCyclePrev<CR>')

map('n', '/', ':Telescope current_buffer_fuzzy_find<CR>')

map('x', 'ga', '<Plug>(EasyAlign)', {noremap=false})
map('n', 'ga', '<Plug>(EasyAlign)', {noremap=false})

map('n', 'gd', ':Telescope lsp_definitions<CR>')
map('n', 'gr', ':Telescope lsp_references<CR>')
map('n', 'gi', ':Telescope lsp_implementations<CR>')
map('n', 'gh', ':Telescope registers<CR>')

map('n', 'w', '<Plug>WordMotion_w', {noremap=false})
map('n', 'W', '<Plug>WordMotion_W', {noremap=false})
map('n', 'b', '<Plug>WordMotion_b', {noremap=false})
map('n', 'B', '<Plug>WordMotion_B', {noremap=false})
map('n', 'd', '<Plug>WordMotion_e', {noremap=false})
map('n', 'D', '<Plug>WordMotion_d', {noremap=false})

map('n', ']e', ':Lspsaga diagnostic_jump_next<CR>')
map('n', '[e', ':Lspsaga diagnostic_jump_prev<CR>')

map('n', 'gw', ':HopWord<CR>')
map('n', 'gl', ':HopLine<CR>')
map('n', 'gs', ':HopChar2<CR>')
map('v', 'gw', ':HopWord<CR>')
map('v', 'gl', ':HopLine<CR>')
map('v', 'gs', ':HopChar2<CR>')

map('n', 'sd', [[<Cmd>lua require'surround'.surround_delete()<CR>]])
map('n', 'sc', [[<Cmd>lua require'surround'.surround_replace()<CR>]])

-- Leader
map('n', '<leader><space>', ':BufferLinePick<CR>')

map('n', '<leader>qa', ':qa!<CR>')
map('n', '<leader>qq', ':Sayonara!<CR>')

map('n', '<leader>wc', '<C-w>o')
map('n', '<leader>wq', '<C-w>c')
map('n', '<leader>wh', '<C-w>s')
map('n', '<leader>wv', '<C-w>v')
map('n', '<leader>wy', '<C-w>h')
map('n', '<leader>wn', '<C-w>j')
map('n', '<leader>wi', '<C-w>k')
map('n', '<leader>wo', '<C-w>l')
map('n', '<leader>wY', '<C-w>H')
map('n', '<leader>wN', '<C-w>J')
map('n', '<leader>wI', '<C-w>K')
map('n', '<leader>wO', '<C-w>L')

map('n', '<leader>w+','<C-w>+')
map('n', '<leader>w-','<C-w>-')
map('n', '<leader>w=', '<C-w>=')

map('n', '<leader>rn', '<Cmd>lua vim.lsp.buf.rename()')

map('n', '<leader>ff', ':Telescope find_files<CR>')
map('n', '<leader>fh', ':Telescope oldfiles<CR>')
map('n', '<leader>fg', ':Telescope live_grep<CR>')
map('n', '<leader>bb', ':Telescope buffers<CR>')
map('n', '<leader>ft', ':TodoTelescope<CR>')
map('n', '<leader>fp', ':Telescope projects<CR>')

map('n', '<leader>fm', ':Format<CR>')

-- F1: toggleterm
--
map('', '<F1>', '<Esc>:FloatermToggle<CR>')
map('t', '<F1>', [[<C-\><C-n>:FloatermToggle<CR>]])
map('', '<F2>', '<Esc>:NvimTreeToggle<CR>')

map('n', '<F5>', [[:lua require'dap'.continue()<CR>]])
map('n', '<F6>', [[:lua require'dap'.close()<CR>]])
map('n', '<F7>', [[:lua require'dapui'.toggle()<CR>]])
map('n', '<F8>', [[:lua require'dap'.toggle_breakpoint()<CR>]])
map('n', '<F9>', [[:lua require'dap'.step_over()<CR>]])
map('n', '<F10>', [[:lua require'dap'.step_into()<CR>]])
map('n', '<F11>', [[:lua require'dap'.step_out()<CR>]])
map('n', '<F12>', [[:lua require'dap'.run_to_cursor()<CR>]])
