local function map(mode, lhs, rhs, opts)
    local options = {noremap = true, silent = true}
    if opts then options = vim.tbl_extend('force', options, opts) end
    vim.api.nvim_set_keymap(mode, lhs, rhs, options)
end

-- Norman Keyboard Layout
map('n', 'd', 'e')
map('n', 'f', 'r')
map('n', 'k', 't')
map('n', 'j', 'y')
map('n', 'r', 'i')
map('n', 'l', 'o')
map('n', 'e', 'd')
map('n', 't', 'f')
map('n', 'y', 'h')
map('n', 'n', 'j')
map('n', 'i', 'k')
map('n', 'o', 'l')
map('n', 'p', 'n')
map('n', 'D', 'E')
map('n', 'F', 'R')
map('n', 'K', 'T')
map('n', 'J', 'Y')
map('n', 'R', 'I')
map('n', 'L', 'O')
map('n', 'E', 'D')
map('n', 'T', 'F')
map('n', 'Y', 'H')
map('n', 'N', 'J')
map('n', 'I', 'K')
map('n', 'O', 'L')
map('n', 'P', 'N')

map('o', 'd', 'e')
map('o', 'f', 'r')
map('o', 'k', 't')
map('o', 'j', 'y')
map('o', 'r', 'i')
map('o', 'l', 'o')
map('o', 'e', 'd')
map('o', 't', 'f')
map('o', 'y', 'h')
map('o', 'n', 'j')
map('o', 'i', 'k')
map('o', 'o', 'l')
map('o', 'p', 'n')
map('o', 'D', 'E')
map('o', 'F', 'R')
map('o', 'K', 'T')
map('o', 'J', 'Y')
map('o', 'R', 'I')
map('o', 'L', 'O')
map('o', 'E', 'D')
map('o', 'T', 'F')
map('o', 'Y', 'H')
map('o', 'N', 'J')
map('o', 'I', 'K')
map('o', 'O', 'L')
map('o', 'P', 'N')

map('x', 'd', 'e')
map('x', 'f', 'r')
map('x', 'k', 't')
map('x', 'j', 'y')
map('x', 'r', 'i')
map('x', 'l', 'o')
map('x', 'e', 'd')
map('x', 't', 'f')
map('x', 'y', 'h')
map('x', 'n', 'j')
map('x', 'i', 'k')
map('x', 'o', 'l')
map('x', 'p', 'n')
map('x', 'D', 'E')
map('x', 'F', 'R')
map('x', 'K', 'T')
map('x', 'J', 'Y')
map('x', 'R', 'I')
map('x', 'L', 'O')
map('x', 'E', 'D')
map('x', 'T', 'F')
map('x', 'Y', 'H')
map('x', 'N', 'J')
map('x', 'I', 'K')
map('x', 'O', 'L')
map('x', 'P', 'N')

map("v", "<", "<gv")
map("v", ">", ">gv")

map("n", "<TAB>", ":bnext<CR>")
map("n", "<S-TAB>", ":bprevious<CR>")

-- Plugin
map('n', '/', ':Telescope current_buffer_fuzzy_find<CR>')

map('x', 'ga', '<Plug>(EasyAlign)', {noremap=false})
map('n', 'ga', '<Plug>(EasyAlign)', {noremap=false})

map('n', 'gd', '<Cmd>lua vim.lsp.buf.definition()<CR>')
map('n', 'gr', ':Lspsaga lsp_finder<CR>')

map('n', 't', '<Plug>Lightspeed_f', {noremap=false})
map('n', 'T', '<Plug>Lightspeed_F', {noremap=false})
map('n', 'k', '<Plug>Lightspeed_t', {noremap=false})
map('n', 'K', '<Plug>Lightspeed_T', {noremap=false})
map('o', 't', '<Plug>Lightspeed_f', {noremap=false})
map('o', 'T', '<Plug>Lightspeed_F', {noremap=false})
map('o', 'k', '<Plug>Lightspeed_t', {noremap=false})
map('o', 'K', '<Plug>Lightspeed_T', {noremap=false})
map('x', 't', '<Plug>Lightspeed_f', {noremap=false})
map('x', 'T', '<Plug>Lightspeed_F', {noremap=false})
map('x', 'k', '<Plug>Lightspeed_t', {noremap=false})
map('x', 'K', '<Plug>Lightspeed_T', {noremap=false})

map('',  '[y',    '<plug>(YoinkRotateBack)',                 {noremap=false})
map('',  ']y',    '<plug>(YoinkRotateForward)',              {noremap=false})
map('x', 'j',     '<plug>(YoinkYankPreserveCursorPosition)', {noremap=false})
map('n', 'j',     '<plug>(YoinkYankPreserveCursorPosition)', {noremap=false})
map('x', 'h',     '<plug>(YoinkPaste_p)',                    {noremap=false})
map('n', 'h',     '<plug>(YoinkPaste_p)',                    {noremap=false})
map('n', 'gh',    '<plug>(YoinkPaste_gp)',                   {noremap=false})
map('n', 'gH',    '<plug>(YoinkPaste_gP)',                   {noremap=false})
map('n', '<c-n>', '<plug>(YoinkPostPasteSwapBack',           {noremap=false})
map('n', '<c-p>', '<plug>(YoinkPostPasteSwapForwrd)',        {noremap=false})

map('n', 'w', '<Plug>WordMotion_w', {noremap=false})
map('n', 'W', '<Plug>WordMotion_W', {noremap=false})
map('n', 'b', '<Plug>WordMotion_b', {noremap=false})
map('n', 'B', '<Plug>WordMotion_B', {noremap=false})
map('n', 'd', '<Plug>WordMotion_e', {noremap=false})
map('n', 'D', '<Plug>WordMotion_d', {noremap=false})

map('n', ']e', ':Lspsaga diagnostic_jump_next<CR>')
map('n', '[e', ':Lspsaga diagnostic_jump_prev<CR>')

-- Leader
map('n', '<leader><tab>', ':e#<CR>')
map('n', '<leader><space>', ':BufferLinePick<CR>')

map('n', '<leader>qa', ':wqa<CR>')
map('n', '<leader>qx', ':wqa!<CR>')
map('n', '<leader>qq', ':Sayonara!<CR>')

map('n', '<leader>wc', '<C-w>o')
map('n', '<leader>wq', '<C-w>c')
map('n', '<leader>wh', '<C-w>s')
map('n', '<leader>wv', '<C-w>v')
map('n', '<leader>wy', '<C-w>h')
map('n', '<leader>wn', '<C-w>j')
map('n', '<leader>wi', '<C-w>k')
map('n', '<leader>wo', '<C-w>l')
map('n', '<leader>wY', '<C-w>H')
map('n', '<leader>wN', '<C-w>J')
map('n', '<leader>wI', '<C-w>K')
map('n', '<leader>wO', '<C-w>L')

map('n', '<leader>w+','<C-w>+')
map('n', '<leader>w-','<C-w>-')
map('n', '<leader>w=', '<C-w>=')

map('n', '<leader>rn', ':Lspsaga rename<CR>')

map('n', '<leader>ff', ':Telescope find_files<CR>')
map('n', '<leader>fh', ':Telescope oldfiles<CR>')
map('n', '<leader>fg', ':Telescope live_grep<CR>')
map('n', '<leader>bb', ':Telescope buffers<CR>')

map('n', '<leader>fm', ':Format<CR>')

map('n', '<leader>u', ':MundoToggle<CR>')
